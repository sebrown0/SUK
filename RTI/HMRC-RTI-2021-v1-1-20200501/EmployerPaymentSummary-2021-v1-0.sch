<?xml version="1.0" encoding="UTF-8"?>
<!--
Schematron
Generated by CoreFiling: generator revision 537866
Fri May 01 13:27:55 BST 2020
-->
<sch:schema xmlns:sch="http://purl.oclc.org/dsdl/schematron" queryBinding="exslt">
  <sch:title>Schematron for EmployerPaymentSummary</sch:title>
  <sch:ns prefix="hd" uri="http://www.govtalk.gov.uk/CM/envelope"/>
  <sch:ns prefix="dsig" uri="http://www.w3.org/2000/09/xmldsig#"/>
  <sch:ns prefix="eps" uri="http://www.govtalk.gov.uk/taxation/PAYE/RTI/EmployerPaymentSummary/20-21/1"/>
    <sch:pattern id="p39">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:IRheader/eps:Keys/eps:Key">
        <sch:assert test="count(../../../../../hd:GovTalkDetails/hd:Keys/hd:Key[@Type = current()/@Type and . = current()]) &gt; 0" id="a_r1004" diagnostics="errorCode.r1004 transactional.r1004 transactional.en.r1004 ">Keys in the IR header must also exist in the GovTalk header with the same value</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p38">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:IRheader">
        <sch:assert test="count(eps:Keys/eps:Key) &gt; 0" id="a_r1005" diagnostics="errorCode.r1005 transactional.r1005 transactional.en.r1005 ">At least one key must exist in the IRheader</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p41">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:EmpRefs/eps:OfficeNo">
        <sch:assert test="../../../eps:IRheader/eps:Keys/eps:Key[@Type = &apos;TaxOfficeNumber&apos;] = ." id="a_HMRCOFFICENUMBER.0" diagnostics="errorCode.HMRCOFFICENUMBER.0 transactional.HMRCOFFICENUMBER.0 transactional.en.HMRCOFFICENUMBER.0 ">The TaxOfficeNumber key within the IRheader must match [HMRCOFFICENUMBER]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p42">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:EmpRefs/eps:PayeRef">
        <sch:assert test="../../../eps:IRheader/eps:Keys/eps:Key[@Type = &apos;TaxOfficeReference&apos;] = ." id="a_EMPLOYERPAYEREF.0" diagnostics="errorCode.EMPLOYERPAYEREF.0 transactional.EMPLOYERPAYEREF.0 transactional.en.EMPLOYERPAYEREF.0 ">The TaxOfficeReference key within the IRheader must match [EMPLOYERPAYEREF]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p43">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:NoPaymentDates/eps:From">
        <sch:assert test="(round(date:seconds(normalize-space(.)) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))" id="a_NOPAYMENTDATEFROM.0" diagnostics="errorCode.NOPAYMENTDATEFROM.0 transactional.NOPAYMENTDATEFROM.0 transactional.en.NOPAYMENTDATEFROM.0 ">[NOPAYMENTDATEFROM] must be on or before the current date.</sch:assert>
        <sch:assert test="(round(date:seconds(normalize-space(.)) div 86400) &lt; round(date:seconds(normalize-space(../eps:To)) div 86400))" id="a_NOPAYMENTDATEFROM.1" diagnostics="errorCode.NOPAYMENTDATEFROM.1 transactional.NOPAYMENTDATEFROM.1 transactional.en.NOPAYMENTDATEFROM.1 ">[NOPAYMENTDATEFROM] must be before [NOPAYMENTDATETO]</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p44">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:NoPaymentDates/eps:To">
        <sch:assert test="(round(date:seconds(normalize-space(date:add(normalize-space(.),normalize-space(&quot;-P1M&quot;)))) div 86400) &lt; round(date:seconds(normalize-space(date:date())) div 86400))" id="a_NOPAYMENTDATETO.0" diagnostics="errorCode.NOPAYMENTDATETO.0 transactional.NOPAYMENTDATETO.0 transactional.en.NOPAYMENTDATETO.0 ">[NOPAYMENTDATETO] must be no later than the end of the current tax month - the 5th.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p46">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:PeriodOfInactivity/eps:From">
        <sch:assert test="(round(date:seconds(normalize-space(.)) div 86400) &lt; round(date:seconds(normalize-space(../eps:To)) div 86400))" id="a_PERIODOFINACTIVITYFROM.1" diagnostics="errorCode.PERIODOFINACTIVITYFROM.1 transactional.PERIODOFINACTIVITYFROM.1 transactional.en.PERIODOFINACTIVITYFROM.1 ">[PERIODOFINACTIVITYFROM] must be before [PERIODOFINACTIVITYTO]</sch:assert>
        <sch:assert test="( 
              ( (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(date:year(), &apos;-12-05&apos;))) div 86400))
                  and
                date:year(normalize-space((.))) = date:year()
              )
                or
              (
                not ( (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(date:year(), &apos;-12-05&apos;))) div 86400)) )
                     and
                   date:year(normalize-space((.))) = (date:year() + 1)
              )
            )

            and

            date:month-in-year(normalize-space(.)) = (date:month-in-year(normalize-space(date:add(normalize-space(date:date()),normalize-space(&apos;-P5D&apos;)))) mod 12) + 1" id="a_PERIODOFINACTIVITYFROM.2" diagnostics="errorCode.PERIODOFINACTIVITYFROM.2 transactional.PERIODOFINACTIVITYFROM.2 transactional.en.PERIODOFINACTIVITYFROM.2 ">[PERIODOFINACTIVITYFROM] must be the start of the next tax month</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p47">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:PeriodOfInactivity/eps:To">
        <sch:assert test="(round(date:seconds(normalize-space(date:date())) div 86400) &lt; round(date:seconds(normalize-space(.)) div 86400))" id="a_PERIODOFINACTIVITYTO.0" diagnostics="errorCode.PERIODOFINACTIVITYTO.0 transactional.PERIODOFINACTIVITYTO.0 transactional.en.PERIODOFINACTIVITYTO.0 ">[PERIODOFINACTIVITYTO] must be after the current date</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p45">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:PeriodOfInactivity">
        <sch:assert test="(round(date:seconds(normalize-space(eps:To)) div 86400) &lt;= round(date:seconds(normalize-space(date:add(normalize-space(eps:From),normalize-space(&apos;P12M&apos;)))) div 86400))" id="a_PERIODOFINACTIVITY.0" diagnostics="errorCode.PERIODOFINACTIVITY.0 transactional.PERIODOFINACTIVITY.0 transactional.en.PERIODOFINACTIVITY.0 ">[PERIODOFINACTIVITY] must be less than or equal to 12 months.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p48">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:EmpAllceInd">
        <sch:assert test="not((.) = &apos;yes&apos;) or ../eps:DeMinimisStateAid" id="a_EMPLOYMENTALLOWANCEINDICATOR.1" diagnostics="errorCode.EMPLOYMENTALLOWANCEINDICATOR.1 transactional.EMPLOYMENTALLOWANCEINDICATOR.1 transactional.en.EMPLOYMENTALLOWANCEINDICATOR.1 ">[DEMINIMISSTATEAID] must be present if [EMPLOYMENTALLOWANCEINDICATOR] equals 'yes'.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p50">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:DeMinimisStateAid/eps:Agri">
        <sch:assert test="../eps:Aid" id="a_AGRICULTURESECTOR.0" diagnostics="errorCode.AGRICULTURESECTOR.0 transactional.AGRICULTURESECTOR.0 transactional.en.AGRICULTURESECTOR.0 ">[AMOUNTOFAID] should be present if [AGRICULTURESECTOR] is present</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p51">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:DeMinimisStateAid/eps:FisheriesAqua">
        <sch:assert test="../eps:Aid" id="a_FISHERIESANDAQUACULTURESECTOR.0" diagnostics="errorCode.FISHERIESANDAQUACULTURESECTOR.0 transactional.FISHERIESANDAQUACULTURESECTOR.0 transactional.en.FISHERIESANDAQUACULTURESECTOR.0 ">[AMOUNTOFAID] should be present if [FISHERIESANDAQUACULTURESECTOR] is present</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p52">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:DeMinimisStateAid/eps:RoadTrans">
        <sch:assert test="../eps:Aid" id="a_ROADTRANSPORTSECTOR.0" diagnostics="errorCode.ROADTRANSPORTSECTOR.0 transactional.ROADTRANSPORTSECTOR.0 transactional.en.ROADTRANSPORTSECTOR.0 ">[AMOUNTOFAID] should be present if [ROADTRANSPORTSECTOR] is present</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p53">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:DeMinimisStateAid/eps:Indust">
        <sch:assert test="../eps:Aid" id="a_INDUSTRIALSECTOR.0" diagnostics="errorCode.INDUSTRIALSECTOR.0 transactional.INDUSTRIALSECTOR.0 transactional.en.INDUSTRIALSECTOR.0 ">[AMOUNTOFAID] should be present if [INDUSTRIALSECTOR] is present</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p54">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:DeMinimisStateAid/eps:NA">
        <sch:assert test="not(../eps:Agri)" id="a_STATEAIDRULESDONOTAPPLY.0" diagnostics="errorCode.STATEAIDRULESDONOTAPPLY.0 transactional.STATEAIDRULESDONOTAPPLY.0 transactional.en.STATEAIDRULESDONOTAPPLY.0 ">[STATEAIDRULESDONOTAPPLY] should not be present if [AGRICULTURESECTOR] is present</sch:assert>
        <sch:assert test="not(../eps:FisheriesAqua)" id="a_STATEAIDRULESDONOTAPPLY.1" diagnostics="errorCode.STATEAIDRULESDONOTAPPLY.1 transactional.STATEAIDRULESDONOTAPPLY.1 transactional.en.STATEAIDRULESDONOTAPPLY.1 ">[STATEAIDRULESDONOTAPPLY] should not be present if [FISHERIESANDAQUACULTURESECTOR] is present</sch:assert>
        <sch:assert test="not(../eps:RoadTrans)" id="a_STATEAIDRULESDONOTAPPLY.2" diagnostics="errorCode.STATEAIDRULESDONOTAPPLY.2 transactional.STATEAIDRULESDONOTAPPLY.2 transactional.en.STATEAIDRULESDONOTAPPLY.2 ">[STATEAIDRULESDONOTAPPLY] should not be present if [ROADTRANSPORTSECTOR] is present</sch:assert>
        <sch:assert test="not(../eps:Indust)" id="a_STATEAIDRULESDONOTAPPLY.3" diagnostics="errorCode.STATEAIDRULESDONOTAPPLY.3 transactional.STATEAIDRULESDONOTAPPLY.3 transactional.en.STATEAIDRULESDONOTAPPLY.3 ">[STATEAIDRULESDONOTAPPLY] should not be present if [INDUSTRIALSECTOR] is present</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p55">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:DeMinimisStateAid/eps:Aid">
        <sch:assert test="not(../eps:NA)" id="a_AMOUNTOFAID.0" diagnostics="errorCode.AMOUNTOFAID.0 transactional.AMOUNTOFAID.0 transactional.en.AMOUNTOFAID.0 ">[AMOUNTOFAID] should not be present if [STATEAIDRULESDONOTAPPLY] is present</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p49">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:DeMinimisStateAid">
        <sch:assert test="eps:Agri or
          eps:FisheriesAqua or
          eps:RoadTrans or
          eps:Indust or
          eps:NA" id="a_DEMINIMISSTATEAID.2" diagnostics="errorCode.DEMINIMISSTATEAID.2 transactional.DEMINIMISSTATEAID.2 transactional.en.DEMINIMISSTATEAID.2 ">If [DEMINIMISSTATEAID] is present, at least one of [AGRICULTURESECTOR], [FISHERIESANDAQUACULTURESECTOR], [ROADTRANSPORTSECTOR], [INDUSTRIALSECTOR] or [STATEAIDRULESDONOTAPPLY] must be present.</sch:assert>
        <sch:assert test="../eps:EmpAllceInd = &apos;yes&apos;" id="a_DEMINIMISSTATEAID.1" diagnostics="errorCode.DEMINIMISSTATEAID.1 transactional.DEMINIMISSTATEAID.1 transactional.en.DEMINIMISSTATEAID.1 ">If [DEMINIMISSTATEAID] is present, [EMPLOYMENTALLOWANCEINDICATOR] must equal 'yes'.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p57">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:RecoverableAmountsYTD/eps:TaxMonth">
        <sch:assert test="not(&apos;1&apos; = (.))
              or
            (
              (round(date:seconds(normalize-space(concat(2021 - 1, &apos;-03-06&apos;))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))
                and
              (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2021 - 1, &apos;-05-19&apos;))) div 86400))
            )" id="a_TAXMONTH.1" diagnostics="errorCode.TAXMONTH.1 transactional.TAXMONTH.1 transactional.en.TAXMONTH.1 ">A [TAXMONTH] equal to 1 is only valid if the submission is made between 6 March of the tax year before [RELATEDTAXYEAR] and 19 May of [RELATEDTAXYEAR] inclusive.</sch:assert>
        <sch:assert test="not(&apos;2&apos; = (.))
              or
            (
              (round(date:seconds(normalize-space(concat(2021 - 1, &apos;-04-06&apos;))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))
                and
              (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2021 - 1, &apos;-06-19&apos;))) div 86400))
            )" id="a_TAXMONTH.2" diagnostics="errorCode.TAXMONTH.2 transactional.TAXMONTH.2 transactional.en.TAXMONTH.2 ">A [TAXMONTH] equal to 2 is only valid if the submission is made between 6 April and 19 June of [RELATEDTAXYEAR] inclusive.</sch:assert>
        <sch:assert test="not(&apos;3&apos; = (.))
              or
            (
              (round(date:seconds(normalize-space(concat(2021 - 1, &apos;-05-06&apos;))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))
                and
              (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2021 - 1, &apos;-07-19&apos;))) div 86400))
            )" id="a_TAXMONTH.3" diagnostics="errorCode.TAXMONTH.3 transactional.TAXMONTH.3 transactional.en.TAXMONTH.3 ">A [TAXMONTH] equal to 3 is only valid if the submission is made between 6 May and 19 July of [RELATEDTAXYEAR] inclusive.</sch:assert>
        <sch:assert test="not(&apos;4&apos; = (.))
              or
            (
              (round(date:seconds(normalize-space(concat(2021 - 1, &apos;-06-06&apos;))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))
                and
              (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2021 - 1, &apos;-08-19&apos;))) div 86400))
            )" id="a_TAXMONTH.4" diagnostics="errorCode.TAXMONTH.4 transactional.TAXMONTH.4 transactional.en.TAXMONTH.4 ">A [TAXMONTH] equal to 4 is only valid if the submission is made between 6 June and 19 August of [RELATEDTAXYEAR] inclusive.</sch:assert>
        <sch:assert test="not(&apos;5&apos; = (.))
              or
            (
              (round(date:seconds(normalize-space(concat(2021 - 1, &apos;-07-06&apos;))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))
                and
              (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2021 - 1, &apos;-09-19&apos;))) div 86400))
            )" id="a_TAXMONTH.5" diagnostics="errorCode.TAXMONTH.5 transactional.TAXMONTH.5 transactional.en.TAXMONTH.5 ">A [TAXMONTH] equal to 5 is only valid if the submission is made between 6 July and 19 September of [RELATEDTAXYEAR] inclusive.</sch:assert>
        <sch:assert test="not(&apos;6&apos; = (.))
              or
            (
              (round(date:seconds(normalize-space(concat(2021 - 1, &apos;-08-06&apos;))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))
                and
              (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2021 - 1, &apos;-10-19&apos;))) div 86400))
            )" id="a_TAXMONTH.6" diagnostics="errorCode.TAXMONTH.6 transactional.TAXMONTH.6 transactional.en.TAXMONTH.6 ">A [TAXMONTH] equal to 6 is only valid if the submission is made between 6 August and 19 October of [RELATEDTAXYEAR] inclusive.</sch:assert>
        <sch:assert test="not(&apos;7&apos; = (.))
              or
            (
              (round(date:seconds(normalize-space(concat(2021 - 1, &apos;-09-06&apos;))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))
                and
              (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2021 - 1, &apos;-11-19&apos;))) div 86400))
            )" id="a_TAXMONTH.7" diagnostics="errorCode.TAXMONTH.7 transactional.TAXMONTH.7 transactional.en.TAXMONTH.7 ">A [TAXMONTH] equal to 7 is only valid if the submission is made between 6 September and 19 November of [RELATEDTAXYEAR] inclusive.</sch:assert>
        <sch:assert test="not(&apos;8&apos; = (.))
              or
            (
              (round(date:seconds(normalize-space(concat(2021 - 1, &apos;-10-06&apos;))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))
                and
              (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2021 - 1, &apos;-12-19&apos;))) div 86400))
            )" id="a_TAXMONTH.8" diagnostics="errorCode.TAXMONTH.8 transactional.TAXMONTH.8 transactional.en.TAXMONTH.8 ">A [TAXMONTH] equal to 8 is only valid if the submission is made between 6 October and 19 December of [RELATEDTAXYEAR] inclusive.</sch:assert>
        <sch:assert test="not(&apos;9&apos; = (.))
              or
            (
              (round(date:seconds(normalize-space(concat(2021 - 1, &apos;-11-06&apos;))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))
                and
              (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2021, &apos;-01-19&apos;))) div 86400))
            )" id="a_TAXMONTH.9" diagnostics="errorCode.TAXMONTH.9 transactional.TAXMONTH.9 transactional.en.TAXMONTH.9 ">A [TAXMONTH] equal to 9 is only valid if the submission is made between 6 November and 19 January of [RELATEDTAXYEAR] inclusive.</sch:assert>
        <sch:assert test="not(&apos;10&apos; = (.))
              or
            (
              (round(date:seconds(normalize-space(concat(2021 - 1, &apos;-12-06&apos;))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))
                and
              (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2021, &apos;-02-19&apos;))) div 86400))
            )" id="a_TAXMONTH.10" diagnostics="errorCode.TAXMONTH.10 transactional.TAXMONTH.10 transactional.en.TAXMONTH.10 ">A [TAXMONTH] equal to 10 is only valid if the submission is made between 6 December and 19 February of [RELATEDTAXYEAR] inclusive.</sch:assert>
        <sch:assert test="not(&apos;11&apos; = (.))
              or
            (
              (round(date:seconds(normalize-space(concat(2021, &apos;-01-06&apos;))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))
                and
              (round(date:seconds(normalize-space(date:date())) div 86400) &lt;= round(date:seconds(normalize-space(concat(2021, &apos;-03-19&apos;))) div 86400))
            )" id="a_TAXMONTH.11" diagnostics="errorCode.TAXMONTH.11 transactional.TAXMONTH.11 transactional.en.TAXMONTH.11 ">A [TAXMONTH] equal to 11 is only valid if the submission is made between 6 January and 19 March of [RELATEDTAXYEAR] inclusive.</sch:assert>
        <sch:assert test="not(&apos;12&apos; = (.))
              or
            (round(date:seconds(normalize-space(concat(2021, &apos;-02-06&apos;))) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))" id="a_TAXMONTH.12" diagnostics="errorCode.TAXMONTH.12 transactional.TAXMONTH.12 transactional.en.TAXMONTH.12 ">A [TAXMONTH] equal to 12 is only valid if the submission is made on or after 6 February of [RELATEDTAXYEAR].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p56">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:RecoverableAmountsYTD">
        <sch:assert test="eps:SMPRecovered or 
          eps:SPPRecovered or 
          eps:SAPRecovered or 
          eps:ShPPRecovered or 
          eps:SPBPRecovered or 
          eps:NICCompensationOnSMP or 
          eps:NICCompensationOnSPP or 
          eps:NICCompensationOnSAP or 
          eps:NICCompensationOnShPP or 
          eps:NICCompensationOnSPBP or 
          eps:CISDeductionsSuffered" id="a_PAYMENTFORPERIOD.0" diagnostics="errorCode.PAYMENTFORPERIOD.0 transactional.PAYMENTFORPERIOD.0 transactional.en.PAYMENTFORPERIOD.0 ">If [RECOVERABLEAMOUNTSYEARTODATE] is present, at least one of [SMPRECOVERED] or [SPPRECOVERED] or [SAPRECOVERED] or [SHPPRECOVERED] or [SPBPRECOVERED] or [NICCOMPENSATIONONSMP] or [NICCOMPENSATIONONSPP] or [NICCOMPENSATIONONSAP] or [NICCOMPENSATIONONSHPP] or [NICCOMPENSATIONONSPBP] or [CISDEDUCTIONSSUFFERED] must be present.</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p58">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:RelatedTaxYear">
        <sch:assert test="substring(string(2021 - 1), 3, 2) = substring(., 1, 2)
          and
            substring(2021, 3, 2) = substring(., 4, 2)" id="a_RELATEDTAXYEAR.0" diagnostics="errorCode.RELATEDTAXYEAR.0 transactional.RELATEDTAXYEAR.0 transactional.en.RELATEDTAXYEAR.0 ">Must be the appropriate tax year for the schema year. I.E. 20-21 for RTI-2021</sch:assert>
        <sch:assert test="(round(date:seconds(normalize-space(concat(2000 + number(substring(.,1,2)), &apos;-04-06&apos;))) div 86400) &lt;= round(date:seconds(normalize-space(../../eps:IRheader/eps:PeriodEnd)) div 86400))
        and
          (round(date:seconds(normalize-space(../../eps:IRheader/eps:PeriodEnd)) div 86400) &lt;= round(date:seconds(normalize-space(concat(2001 + number(substring(.,1,2)), &apos;-04-05&apos;))) div 86400))" id="a_RELATEDTAXYEAR.2" diagnostics="errorCode.RELATEDTAXYEAR.2 transactional.RELATEDTAXYEAR.2 transactional.en.RELATEDTAXYEAR.2 ">The PeriodEnd within the IRheader must be within the same tax year as [RELATEDTAXYEAR].</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p60">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:FinalSubmission/eps:BecauseSchemeCeased">
        <sch:assert test="../eps:DateSchemeCeased" id="a_FINALSUBMISSIONCEASEDINDICATOR.1" diagnostics="errorCode.FINALSUBMISSIONCEASEDINDICATOR.1 transactional.FINALSUBMISSIONCEASEDINDICATOR.1 transactional.en.FINALSUBMISSIONCEASEDINDICATOR.1 ">[DATESCHEMECEASED] should be present if [FINALSUBMISSIONCEASEDINDICATOR] is present</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p61">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:FinalSubmission/eps:DateSchemeCeased">
        <sch:assert test="(round(date:seconds(normalize-space(.)) div 86400) &lt;= round(date:seconds(normalize-space(date:date())) div 86400))" id="a_DATESCHEMECEASED.0" diagnostics="errorCode.DATESCHEMECEASED.0 transactional.DATESCHEMECEASED.0 transactional.en.DATESCHEMECEASED.0 ">[DATESCHEMECEASED] must not be in the future</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p59">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary/eps:FinalSubmission">
        <sch:assert test="not ( (.) )
          or
            eps:BecauseSchemeCeased
          or
            eps:DateSchemeCeased
          or
            eps:ForYear" id="a_FINALSUBMISSION.0" diagnostics="errorCode.FINALSUBMISSION.0 transactional.FINALSUBMISSION.0 transactional.en.FINALSUBMISSION.0 ">If [FINALSUBMISSION] is present then [FINALSUBMISSIONCEASEDINDICATOR], [DATESCHEMECEASED] or [FINALSUBMISSIONFORYEARINDICATOR] should be present</sch:assert>
      </sch:rule>
    </sch:pattern>
    <sch:pattern id="p40">
      <sch:rule context="/hd:GovTalkMessage/hd:Body/eps:IRenvelope/eps:EmployerPaymentSummary">
        <sch:assert test="../../../hd:Header/hd:MessageDetails/hd:Class = &apos;HMRC-PAYE-RTI-EPS&apos;
          or
          ../../../hd:Header/hd:MessageDetails/hd:Class = &apos;HMRC-PAYE-RTI-EPS-TIL&apos;" id="a_EPS.1" diagnostics="errorCode.EPS.1 transactional.EPS.1 transactional.en.EPS.1 ">Valid message classes for an Employer Payment Summary are HMRC-PAYE-RTI-EPS and HMRC-PAYE-RTI-EPS-TIL.</sch:assert>
        <sch:assert test="eps:NoPaymentForPeriod or eps:PeriodOfInactivity or eps:EmpAllceInd or eps:DeMinimisStateAid or eps:RecoverableAmountsYTD or eps:ApprenticeshipLevy or eps:Account or eps:FinalSubmission" id="a_EPS.0" diagnostics="errorCode.EPS.0 transactional.EPS.0 transactional.en.EPS.0 ">At least one of [NOPAYMENTFORPERIOD], [PERIODOFINACTIVITY], [EMPLOYMENTALLOWANCEINDICATOR], [DEMINIMISSTATEAID], [RECOVERABLEAMOUNTSYEARTODATE], [APPRENTICESHIPLEVY], [ACCOUNTINFORMATION] or [FINALSUBMISSION] must be submitted.</sch:assert>
      </sch:rule>
    </sch:pattern>
  <sch:diagnostics>
    <sch:diagnostic id="errorCode.r1005">5004</sch:diagnostic>
    <sch:diagnostic id="transactional.r1005">At least one key must exist in the IRheader</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.r1005">At least one key must exist in the IRheader</sch:diagnostic>
    <sch:diagnostic id="errorCode.r1004">5005</sch:diagnostic>
    <sch:diagnostic id="transactional.r1004">Keys in the GovTalkDetails do not match those in the IRheader.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.r1004">Keys in the GovTalkDetails do not match those in the IRheader.</sch:diagnostic>
    <sch:diagnostic id="errorCode.EPS.1">7838</sch:diagnostic>
    <sch:diagnostic id="transactional.EPS.1">Valid message classes for an Employer Payment Summary are HMRC-PAYE-RTI-EPS and HMRC-PAYE-RTI-EPS-TIL.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.EPS.1">Valid message classes for an Employer Payment Summary are HMRC-PAYE-RTI-EPS and HMRC-PAYE-RTI-EPS-TIL.</sch:diagnostic>
    <sch:diagnostic id="errorCode.EPS.0">7913</sch:diagnostic>
    <sch:diagnostic id="transactional.EPS.0">On an Employer Payment Submission there must be an entry in at least one of [NOPAYMENTFORPERIOD], [PERIODOFINACTIVITY], [EMPLOYMENTALLOWANCEINDICATOR], [DEMINIMISSTATEAID], [RECOVERABLEAMOUNTSYEARTODATE], [APPRENTICESHIPLEVY], [ACCOUNTINFORMATION] or [FINALSUBMISSION]. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.EPS.0">On an Employer Payment Submission there must be an entry in at least one of [NOPAYMENTFORPERIOD], [PERIODOFINACTIVITY], [EMPLOYMENTALLOWANCEINDICATOR], [DEMINIMISSTATEAID], [RECOVERABLEAMOUNTSYEARTODATE], [APPRENTICESHIPLEVY], [ACCOUNTINFORMATION] or [FINALSUBMISSION]. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.HMRCOFFICENUMBER.0">7821</sch:diagnostic>
    <sch:diagnostic id="transactional.HMRCOFFICENUMBER.0">The TaxOfficeNumber key within the IRheader must match [HMRCOFFICENUMBER]</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.HMRCOFFICENUMBER.0">The TaxOfficeNumber key within the IRheader must match [HMRCOFFICENUMBER]</sch:diagnostic>
    <sch:diagnostic id="errorCode.EMPLOYERPAYEREF.0">7822</sch:diagnostic>
    <sch:diagnostic id="transactional.EMPLOYERPAYEREF.0">The TaxOfficeReference key within the IRheader must match [EMPLOYERPAYEREF]</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.EMPLOYERPAYEREF.0">The TaxOfficeReference key within the IRheader must match [EMPLOYERPAYEREF]</sch:diagnostic>
    <sch:diagnostic id="errorCode.NOPAYMENTDATEFROM.0">7910</sch:diagnostic>
    <sch:diagnostic id="transactional.NOPAYMENTDATEFROM.0">The entry in [NOPAYMENTDATEFROM] must be on or before today. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.NOPAYMENTDATEFROM.0">The entry in [NOPAYMENTDATEFROM] must be on or before today. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.NOPAYMENTDATEFROM.1">7869</sch:diagnostic>
    <sch:diagnostic id="transactional.NOPAYMENTDATEFROM.1">[NOPAYMENTDATEFROM] must be before [NOPAYMENTDATETO]. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.NOPAYMENTDATEFROM.1">[NOPAYMENTDATEFROM] must be before [NOPAYMENTDATETO]. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.NOPAYMENTDATETO.0">7911</sch:diagnostic>
    <sch:diagnostic id="transactional.NOPAYMENTDATETO.0">The entry in [NOPAYMENTDATETO] must be no later than the 5th of the current tax month. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.NOPAYMENTDATETO.0">The entry in [NOPAYMENTDATETO] must be no later than the 5th of the current tax month. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.PERIODOFINACTIVITY.0">7871</sch:diagnostic>
    <sch:diagnostic id="transactional.PERIODOFINACTIVITY.0">[PERIODOFINACTIVITY] must be less than or equal to 12 months. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.PERIODOFINACTIVITY.0">[PERIODOFINACTIVITY] must be less than or equal to 12 months. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.PERIODOFINACTIVITYFROM.1">7872</sch:diagnostic>
    <sch:diagnostic id="transactional.PERIODOFINACTIVITYFROM.1">[PERIODOFINACTIVITYFROM] must be before [PERIODOFINACTIVITYTO]. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.PERIODOFINACTIVITYFROM.1">[PERIODOFINACTIVITYFROM] must be before [PERIODOFINACTIVITYTO]. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.PERIODOFINACTIVITYFROM.2">7873</sch:diagnostic>
    <sch:diagnostic id="transactional.PERIODOFINACTIVITYFROM.2">[PERIODOFINACTIVITYFROM] must be the start of the next tax month. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.PERIODOFINACTIVITYFROM.2">[PERIODOFINACTIVITYFROM] must be the start of the next tax month. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.PERIODOFINACTIVITYTO.0">7874</sch:diagnostic>
    <sch:diagnostic id="transactional.PERIODOFINACTIVITYTO.0">[PERIODOFINACTIVITYTO] must be after today. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.PERIODOFINACTIVITYTO.0">[PERIODOFINACTIVITYTO] must be after today. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.EMPLOYMENTALLOWANCEINDICATOR.1">7940</sch:diagnostic>
    <sch:diagnostic id="transactional.EMPLOYMENTALLOWANCEINDICATOR.1">[DEMINIMISSTATEAID] must be present if [EMPLOYMENTALLOWANCEINDICATOR] equals 'yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.EMPLOYMENTALLOWANCEINDICATOR.1">[DEMINIMISSTATEAID] must be present if [EMPLOYMENTALLOWANCEINDICATOR] equals 'yes'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.DEMINIMISSTATEAID.2">7941</sch:diagnostic>
    <sch:diagnostic id="transactional.DEMINIMISSTATEAID.2">If [DEMINIMISSTATEAID] is present, at least one of [AGRICULTURESECTOR], [FISHERIESANDAQUACULTURESECTOR], [ROADTRANSPORTSECTOR], [INDUSTRIALSECTOR] or [STATEAIDRULESDONOTAPPLY] must be present.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.DEMINIMISSTATEAID.2">If [DEMINIMISSTATEAID] is present, at least one of [AGRICULTURESECTOR], [FISHERIESANDAQUACULTURESECTOR], [ROADTRANSPORTSECTOR], [INDUSTRIALSECTOR] or [STATEAIDRULESDONOTAPPLY] must be present.</sch:diagnostic>
    <sch:diagnostic id="errorCode.DEMINIMISSTATEAID.1">7942</sch:diagnostic>
    <sch:diagnostic id="transactional.DEMINIMISSTATEAID.1">If [DEMINIMISSTATEAID] is present, [EMPLOYMENTALLOWANCEINDICATOR] must equal 'yes'.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.DEMINIMISSTATEAID.1">If [DEMINIMISSTATEAID] is present, [EMPLOYMENTALLOWANCEINDICATOR] must equal 'yes'.</sch:diagnostic>
    <sch:diagnostic id="errorCode.AGRICULTURESECTOR.0">7943</sch:diagnostic>
    <sch:diagnostic id="transactional.AGRICULTURESECTOR.0">[AMOUNTOFAID] must be present if [AGRICULTURESECTOR] is present</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.AGRICULTURESECTOR.0">[AMOUNTOFAID] must be present if [AGRICULTURESECTOR] is present</sch:diagnostic>
    <sch:diagnostic id="errorCode.FISHERIESANDAQUACULTURESECTOR.0">7944</sch:diagnostic>
    <sch:diagnostic id="transactional.FISHERIESANDAQUACULTURESECTOR.0">[AMOUNTOFAID] must be present if [FISHERIESANDAQUACULTURESECTOR] is present</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.FISHERIESANDAQUACULTURESECTOR.0">[AMOUNTOFAID] must be present if [FISHERIESANDAQUACULTURESECTOR] is present</sch:diagnostic>
    <sch:diagnostic id="errorCode.ROADTRANSPORTSECTOR.0">7945</sch:diagnostic>
    <sch:diagnostic id="transactional.ROADTRANSPORTSECTOR.0">[AMOUNTOFAID] must be present if [ROADTRANSPORTSECTOR] is present</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.ROADTRANSPORTSECTOR.0">[AMOUNTOFAID] must be present if [ROADTRANSPORTSECTOR] is present</sch:diagnostic>
    <sch:diagnostic id="errorCode.INDUSTRIALSECTOR.0">7946</sch:diagnostic>
    <sch:diagnostic id="transactional.INDUSTRIALSECTOR.0">[AMOUNTOFAID] must be present if [INDUSTRIALSECTOR] is present</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.INDUSTRIALSECTOR.0">[AMOUNTOFAID] must be present if [INDUSTRIALSECTOR] is present</sch:diagnostic>
    <sch:diagnostic id="errorCode.STATEAIDRULESDONOTAPPLY.0">7947</sch:diagnostic>
    <sch:diagnostic id="transactional.STATEAIDRULESDONOTAPPLY.0">[STATEAIDRULESDONOTAPPLY] must not be present if [AGRICULTURESECTOR] is present</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.STATEAIDRULESDONOTAPPLY.0">[STATEAIDRULESDONOTAPPLY] must not be present if [AGRICULTURESECTOR] is present</sch:diagnostic>
    <sch:diagnostic id="errorCode.STATEAIDRULESDONOTAPPLY.1">7948</sch:diagnostic>
    <sch:diagnostic id="transactional.STATEAIDRULESDONOTAPPLY.1">[STATEAIDRULESDONOTAPPLY] must not be present if [FISHERIESANDAQUACULTURESECTOR] is present</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.STATEAIDRULESDONOTAPPLY.1">[STATEAIDRULESDONOTAPPLY] must not be present if [FISHERIESANDAQUACULTURESECTOR] is present</sch:diagnostic>
    <sch:diagnostic id="errorCode.STATEAIDRULESDONOTAPPLY.2">7949</sch:diagnostic>
    <sch:diagnostic id="transactional.STATEAIDRULESDONOTAPPLY.2">[STATEAIDRULESDONOTAPPLY] must not be present if [ROADTRANSPORTSECTOR] is present</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.STATEAIDRULESDONOTAPPLY.2">[STATEAIDRULESDONOTAPPLY] must not be present if [ROADTRANSPORTSECTOR] is present</sch:diagnostic>
    <sch:diagnostic id="errorCode.STATEAIDRULESDONOTAPPLY.3">7950</sch:diagnostic>
    <sch:diagnostic id="transactional.STATEAIDRULESDONOTAPPLY.3">[STATEAIDRULESDONOTAPPLY] must not be present if [INDUSTRIALSECTOR] is present</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.STATEAIDRULESDONOTAPPLY.3">[STATEAIDRULESDONOTAPPLY] must not be present if [INDUSTRIALSECTOR] is present</sch:diagnostic>
    <sch:diagnostic id="errorCode.AMOUNTOFAID.0">7951</sch:diagnostic>
    <sch:diagnostic id="transactional.AMOUNTOFAID.0">[AMOUNTOFAID] must not be present if [STATEAIDRULESDONOTAPPLY] is present</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.AMOUNTOFAID.0">[AMOUNTOFAID] must not be present if [STATEAIDRULESDONOTAPPLY] is present</sch:diagnostic>
    <sch:diagnostic id="errorCode.PAYMENTFORPERIOD.0">7912</sch:diagnostic>
    <sch:diagnostic id="transactional.PAYMENTFORPERIOD.0">There must be an entry in at least one of [SMPRECOVERED], [SPPRECOVERED], [SAPRECOVERED], [SHPPRECOVERED], [SPBPRECOVERED], [NICCOMPENSATIONONSMP], [NICCOMPENSATIONONSPP], [NICCOMPENSATIONONSAP], [NICCOMPENSATIONONSHPP], [NICCOMPENSATIONONSPBP] or [CISDEDUCTIONSSUFFERED] if [RECOVERABLEAMOUNTSYEARTODATE] is present. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.PAYMENTFORPERIOD.0">There must be an entry in at least one of [SMPRECOVERED], [SPPRECOVERED], [SAPRECOVERED], [SHPPRECOVERED], [SPBPRECOVERED], [NICCOMPENSATIONONSMP], [NICCOMPENSATIONONSPP], [NICCOMPENSATIONONSAP], [NICCOMPENSATIONONSHPP], [NICCOMPENSATIONONSPBP] or [CISDEDUCTIONSSUFFERED] if [RECOVERABLEAMOUNTSYEARTODATE] is present. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.TAXMONTH.1">7918</sch:diagnostic>
    <sch:diagnostic id="transactional.TAXMONTH.1">The entry in [TAXMONTH] of 1 is only valid if the submission is made between 6 March of the tax year before the [RELATEDTAXYEAR] and 19 May of the [RELATEDTAXYEAR] inclusive. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.TAXMONTH.1">The entry in [TAXMONTH] of 1 is only valid if the submission is made between 6 March of the tax year before the [RELATEDTAXYEAR] and 19 May of the [RELATEDTAXYEAR] inclusive. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.TAXMONTH.2">7919</sch:diagnostic>
    <sch:diagnostic id="transactional.TAXMONTH.2">The entry in [TAXMONTH] of 2 is only valid if the submission is made between 6 April and 19 June inclusive of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.TAXMONTH.2">The entry in [TAXMONTH] of 2 is only valid if the submission is made between 6 April and 19 June inclusive of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.TAXMONTH.3">7920</sch:diagnostic>
    <sch:diagnostic id="transactional.TAXMONTH.3">The entry in [TAXMONTH] of 3 is only valid if the submission is made between 6 May and 19 July inclusive of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.TAXMONTH.3">The entry in [TAXMONTH] of 3 is only valid if the submission is made between 6 May and 19 July inclusive of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.TAXMONTH.4">7921</sch:diagnostic>
    <sch:diagnostic id="transactional.TAXMONTH.4">The entry in [TAXMONTH] of 4 is only valid if the submission is made between 6 June and 19 August inclusive of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.TAXMONTH.4">The entry in [TAXMONTH] of 4 is only valid if the submission is made between 6 June and 19 August inclusive of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.TAXMONTH.5">7922</sch:diagnostic>
    <sch:diagnostic id="transactional.TAXMONTH.5">The entry in [TAXMONTH] of 5 is only valid if the submission is made between 6 July and 19 September inclusive of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.TAXMONTH.5">The entry in [TAXMONTH] of 5 is only valid if the submission is made between 6 July and 19 September inclusive of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.TAXMONTH.6">7923</sch:diagnostic>
    <sch:diagnostic id="transactional.TAXMONTH.6">The entry in [TAXMONTH] of 6 is only valid if the submission is made between 6 August and 19 October inclusive of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.TAXMONTH.6">The entry in [TAXMONTH] of 6 is only valid if the submission is made between 6 August and 19 October inclusive of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.TAXMONTH.7">7924</sch:diagnostic>
    <sch:diagnostic id="transactional.TAXMONTH.7">The entry in [TAXMONTH] of 7 is only valid if the submission is made between 6 September and 19 November inclusive of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.TAXMONTH.7">The entry in [TAXMONTH] of 7 is only valid if the submission is made between 6 September and 19 November inclusive of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.TAXMONTH.8">7925</sch:diagnostic>
    <sch:diagnostic id="transactional.TAXMONTH.8">The entry in [TAXMONTH] of 8 is only valid if the submission is made between 6 October and 19 December inclusive of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.TAXMONTH.8">The entry in [TAXMONTH] of 8 is only valid if the submission is made between 6 October and 19 December inclusive of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.TAXMONTH.9">7926</sch:diagnostic>
    <sch:diagnostic id="transactional.TAXMONTH.9">The entry in [TAXMONTH] of 9 is only valid if the submission is made between 6 November and 19 January inclusive of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.TAXMONTH.9">The entry in [TAXMONTH] of 9 is only valid if the submission is made between 6 November and 19 January inclusive of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.TAXMONTH.10">7927</sch:diagnostic>
    <sch:diagnostic id="transactional.TAXMONTH.10">The entry in [TAXMONTH] of 10 is only valid if the submission is made between 6 December and 19 February inclusive of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.TAXMONTH.10">The entry in [TAXMONTH] of 10 is only valid if the submission is made between 6 December and 19 February inclusive of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.TAXMONTH.11">7928</sch:diagnostic>
    <sch:diagnostic id="transactional.TAXMONTH.11">The entry in [TAXMONTH] of 11 is only valid if the submission is made between 6 January and 19 March inclusive of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.TAXMONTH.11">The entry in [TAXMONTH] of 11 is only valid if the submission is made between 6 January and 19 March inclusive of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.TAXMONTH.12">7929</sch:diagnostic>
    <sch:diagnostic id="transactional.TAXMONTH.12">The entry in [TAXMONTH] of 12 is only valid if the submission is made on or after 6 February of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.TAXMONTH.12">The entry in [TAXMONTH] of 12 is only valid if the submission is made on or after 6 February of the [RELATEDTAXYEAR]. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.RELATEDTAXYEAR.0">7889</sch:diagnostic>
    <sch:diagnostic id="transactional.RELATEDTAXYEAR.0">The Related tax year entered is invalid. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.RELATEDTAXYEAR.0">The Related tax year entered is invalid. Please check</sch:diagnostic>
    <sch:diagnostic id="errorCode.RELATEDTAXYEAR.2">7844</sch:diagnostic>
    <sch:diagnostic id="transactional.RELATEDTAXYEAR.2">The PeriodEnd within the IRheader must be within the same tax year as [RELATEDTAXYEAR].</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.RELATEDTAXYEAR.2">The PeriodEnd within the IRheader must be within the same tax year as [RELATEDTAXYEAR].</sch:diagnostic>
    <sch:diagnostic id="errorCode.FINALSUBMISSION.0">7933</sch:diagnostic>
    <sch:diagnostic id="transactional.FINALSUBMISSION.0">If [FINALSUBMISSION] is present then an entry in [FINALSUBMISSIONCEASEDINDICATOR], [DATESCHEMECEASED] or [FINALSUBMISSIONFORYEARINDICATOR] should be present. Please check.</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.FINALSUBMISSION.0">If [FINALSUBMISSION] is present then an entry in [FINALSUBMISSIONCEASEDINDICATOR], [DATESCHEMECEASED] or [FINALSUBMISSIONFORYEARINDICATOR] should be present. Please check.</sch:diagnostic>
    <sch:diagnostic id="errorCode.FINALSUBMISSIONCEASEDINDICATOR.1">7875</sch:diagnostic>
    <sch:diagnostic id="transactional.FINALSUBMISSIONCEASEDINDICATOR.1">[DATESCHEMECEASED] must be completed if [FINALSUBMISSIONCEASEDINDICATOR] is present</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.FINALSUBMISSIONCEASEDINDICATOR.1">[DATESCHEMECEASED] must be completed if [FINALSUBMISSIONCEASEDINDICATOR] is present</sch:diagnostic>
    <sch:diagnostic id="errorCode.DATESCHEMECEASED.0">7876</sch:diagnostic>
    <sch:diagnostic id="transactional.DATESCHEMECEASED.0">The [DATESCHEMECEASED] must be today or earlier. Please check</sch:diagnostic>
    <sch:diagnostic xml:lang="en" id="transactional.en.DATESCHEMECEASED.0">The [DATESCHEMECEASED] must be today or earlier. Please check</sch:diagnostic>
  </sch:diagnostics>
</sch:schema>
